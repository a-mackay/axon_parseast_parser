use chrono::{NaiveDate, NaiveTime};
use crate::{Lit, Month, Val, YearMonth};
use raystack_core::{Number, Ref, TagName};
use std::collections::HashMap;
use std::str::FromStr;

grammar;

pub Val: Val = {
    Bool => Val::Lit(Lit::Bool(<>)),
    Date => Val::Lit(Lit::Date(<>)),
    Null => Val::Lit(Lit::Null),
    Num => Val::Lit(Lit::Num(<>)),
    Ref => Val::Lit(Lit::Ref(<>)),
    Str => Val::Lit(Lit::Str(<>)),
    Time => Val::Lit(Lit::Time(<>)),
    Uri => Val::Lit(Lit::Uri(<>)),
    YearMonth => Val::Lit(Lit::YearMonth(<>)),
    "[" "]" => Val::List(vec![]),
    "[" <first_val:Val> <vals:("," <Val>)*> "]" => {
        let mut vals = vals;
        vals.insert(0, first_val);
        Val::List(vals)
    },
    "{" "}" => Val::Dict(HashMap::new()),
    "{" <first_entry:DictEntry> <entries:("," <DictEntry>)*> "}" => {
        let mut entries = entries;
        entries.insert(0, first_entry);
        Val::Dict(entries.into_iter().collect())
    }
}

pub YearMonth: YearMonth = {
    r"[1-9][0-9]{3}-[0-9]{2}" => {
        let parts = <>.split("-").collect::<Vec<_>>();
        let year = u32::from_str(parts[0]).unwrap();
        let month = u32::from_str(parts[1]).unwrap();
        let month = Month::from_int(month).unwrap();
        YearMonth::new(year, month)
    }
}

pub Time: NaiveTime = {
    r"[0-9]{2}:[0-9]{2}(:[0-9]{2})?" => {
        let with_secs = NaiveTime::parse_from_str(<>, "%H:%M:%S");
        match &with_secs {
            Ok(_) => with_secs.unwrap(),
            Err(_) => NaiveTime::parse_from_str(<>, "%H:%M").unwrap(),
        }
    }
}

pub Date: NaiveDate = {
    r"[1-9][0-9]{3}-[0-9]{2}-[0-9]{2}" => {
        NaiveDate::parse_from_str(<>, "%Y-%m-%d").unwrap()
    }
}

Ref: Ref = {
    r"@[a-zA-Z0-9_:\.~-]+" => Ref::new(<>.to_owned()).unwrap(),
}

Null: () = {
    "null" => (),
}

Bool: bool = {
    "true" => true,
    "false" => false,
}

DictEntry: (TagName, Box<Val>) = {
    <tag_name:TagName> ":" "removeMarker()" => (tag_name, Box::new(Val::Lit(Lit::DictRemoveMarker))),
    <tag_name:TagName> ":" <val:Val> => (tag_name, Box::new(val)),
    <tag_name:TagName> => (tag_name, Box::new(Val::Lit(Lit::DictMarker))),
}

pub Str: String = {
    r#""([^\\"]|\\[nt"\\])*""# => {
        let s = <>;
        let len = s.len();
        s[1..len - 1]
            .replace(r#"\""#, r#"""#)
            .replace(r"\n", "\n")
            .replace(r"\t", "\t")
            .replace(r"\\", r#"\"#)
            .to_owned()
    },
}

pub Num: Number = {
    <float:Float> <unit:(Unit)?>=> {
        Number::new(float, unit)
    },
}

pub Uri: String = {
    <r"`[^`]*`"> => {
        let s = <>;
        let len = s.len();
        s[1..len - 1].to_owned()
    },
}

pub Float: f64 = {
    <number:r"-?[0-9]+(\.[0-9]+)?"> => f64::from_str(number).unwrap(),
}

pub TagName: TagName = {
    r"[a-z]([a-zA-Z0-9_])*" => TagName::new(<>.to_owned()).unwrap(),
}

pub Unit: String = {
    r"(percent|%|pixel|px|decibel|db|power_factor|pf|ph|pH|percent_relative_humidity|%RH|grams_of_water_per_kilogram_dry_air|gH₂O/kgAir|volts_per_degree_kelvin|V/K|degree_days_celsius|°daysC|degree_days_fahrenheit|°daysF|percent_obscuration_per_foot|%obsc/ft|percent_obscuration_per_meter|%obsc/m|psi_per_degree_fahrenheit|psi/°F|square_meters_per_newton|m²/N|watts_per_square_meter_degree_kelvin|W/m²K|db_millivolt|dBmV|db_microvolt|dBµV|parts_per_unit|ppu|parts_per_million|ppm|parts_per_billion|ppb|grams_per_kilogram|g/kg|radian|rad|degrees_angular|deg|degrees_phase|degPh|steradian|sr|nephelometric_turbidity_units|ntu|formazin_nephelometric_unit|fnu|power_usage_effectiveness|PUE|data_center_infrastructure_efficiency|DCIE|afghani|AFN|Af|algerian_dinar|DZD|argentine_peso|ARS|armenian_dram|AMD|Դ|aruban_guilder_florin|AWG|ƒ|australian_dollar|AUD|azerbaijanian_manat|AZN|ман|bahamian_dollar|BSD|bahraini_dinar|BHD|baht|THB|฿|balboa|PAB|barbados_dollar|BBD|belarussian_ruble|BYR|Br|belize_dollar|BZD|bermudian_dollar|BMD|bolivar_fuerte|VEF|boliviano|BOB|brazilian_real|BRL|R\$|brunei_dollar|BND|bulgarian_lev|BGN|лв|burundi_franc|BIF|canadian_dollar|CAD|cape_verde_escudo|CVE|cayman_islands_dollar|KYD|cedi|GHS|₵|cfa_franc_bceao|XAF|cfp_franc|XPF|chilean_peso|CLP|chinese_yuan|CNY|元|congolese_franc|CDF|cordoba_oro|NIO|C\$|costa_rican_colon|CRC|₡|croatian_kuna|HRK|Kn|cuban_peso|CUP|czech_koruna|CZK|Kč|dalasi|GMD|danish_krone|DKK|kr|denar|MKD|ден|djibouti_franc|DJF|dobra|STD|Db|dominican_peso|DOP|dong|VND|₫|east_caribbean_dollar|XCD|egyptian_pound|EGP|ethiopian_birr|ETB|euro|EUR|€|falkland_islands_pound|FKP|fiji_dollar|FJD|forint|HUF|gibraltar_pound|GIP|gourde|HTG|guarani|PYG|₲|guinea_franc|GNF|guyana_dollar|GYD|hong_kong_dollar|HKD|hryvnia|UAH|₴|iceland_krona|ISK|Kr|indian_rupee|INR|₹|iranian_rial|IRR|iraqi_dinar|IQD|jamaican_dollar|JMD|jordanian_dinar|JOD|kenyan_shilling|KES|Sh|kina|PGK|kip|LAK|₭|konvertibilna_marka|BAM|КМ|kuwaiti_dinar|KWD|kwacha|MWK|MK|kwanza|AOA|Kz|kyat|MMK|lari|GEL|ლ|lebanese_pound|LBP|lek|ALL|lempira|HNL|leone|SLL|Le|leu|RON|liberian_dollar|LRD|libyan_dinar|LYD|lilangeni|SZL|loti|LSL|malagasy_ariary|MGA|malaysian_ringgit|MYR|RM|manat|TMT|mauritius_rupee|MUR|metical|MZN|MTn|mexican_peso|MXN|moldavian_leu|MDL|moroccan_dirham|MAD|naira|NGN|₦|nakfa|ERN|Nfk|namibia_dollar|NAD|nepalese_rupee|NPR|new_israeli_shekel|ILS|₪|new_zealand_dollar|NZD|ngultrum|BTN|north_korean_won|KPW|norwegian_krone|NOK|nuevo_sol|PEN|ouguiya|MRO|UM|pakistan_rupee|PKR|₨|pataca|MOP|peso_uruguayo|UYU|philippine_peso|PHP|₱|pound_sterling|GBP|£|pula|BWP|pzloty|PLN|zł|qatari_rial|QAR|quetzal|GTQ|rand|ZAR|rial_omani|OMR|riel|KHR|rufiyaa|MVR|rupiah|IDR|Rp|russian_ruble|RUB|rwanda_franc|RWF|saint_helena_pound|SHP|saudi_riyal|SAR|serbian_dinar|RSD|din|seychelles_rupee|SCR|singapore_dollar|SGD|solomon_islands_dollar|SBD|som|KGS|somali_shilling|SOS|somoni|TJS|ЅМ|south_korean_won|KRW|₩|sri_lanka_rupee|LKR|Rs|sudanese_pound|SDG|suriname_dollar|SRD|swedish_krona|SEK|swiss_franc|CHF|SFr|syrian_pound|SYP|taiwan_dollar|TWD|taka|BDT|৳|tala|WST|tanzanian_shilling|TZS|tenge|KZT|〒|trinidad_and_tobago_dollar|TTD|tugrik|MNT|₮|tunisian_dinar|TND|turkish_lira|TRY|₤|uae_dirham|AED|uganda_shilling|UGX|us_dollar|USD|\$|uzbekistan_sum|UZS|vatu|VUV|Vt|yemeni_rial|YER|yen|JPY|¥|zambian_kwacha|ZMW|ZK|zimbabwe_dollar|ZWL|meters_per_second_squared|m/s²|radians_per_second_squared|rad/s²|joule_second|Js|radians_per_second|rad/s|revolutions_per_minute|rpm|square_meter|m²|square_millimeter|mm²|square_centimeter|cm²|square_kilometer|km²|square_inch|in²|square_foot|ft²|square_yard|yd²|square_mile|mile²|acre|farad|F|coefficient_of_performance|COP|energy_efficiency_ratio|Btu/Wh|EER|kilowatt_per_ton|kW/ton|kilograms_per_cubic_meter|kg/m³|micrograms_per_cubic_meter|µg/m³|coulomb|C|ampere_hour|Ah|siemens|S|ampere|A|milliampere|mA|ampere_square_meter|Am²|amperes_per_square_meter|A/m²|volts_per_meter|V/m|volt|Volt|V|millivolt|mV|kilovolt|kV|megavolt|MV|ohm|Ω|Ω|kilohm|kΩ|kΩ|megohm|MΩ|MΩ|milliohm|mΩ|mΩ|siemens_per_meter|S/m|ohm_meter|Ωm|Ωm|joule|J|kilojoule|kJ|watt_hour|Wh|kilowatt_hour|kWh|megawatt_hour|MWh|btu|BTU|kilobtu|kBTU|megabtu|MBTU|MMBTU|horsepower_hour|hph|calorie|cal|therm|tons_refrigeration_hour|tonrefh|megajoule|MJ|gigajoule|GJ|newton_meter|Nm|cubic_meters_natural_gas|m³_gas|cubic_feet_natural_gas|ft³_gas|hundred_cubic_feet_natural_gas|thousand_cubic_feet_natural_gas|million_cubic_feet_natural_gas|volt_ampere_hour|VAh|kilovolt_ampere_hour|kVAh|megavolt_ampere_hour|MVAh|volt_ampere_reactive_hour|VARh|kilovolt_ampere_reactive_hour|kVARh|megavolt_ampere_reactive_hour|MVARh|joules_per_square_meter|J/m²|watt_hours_per_square_meter|Wh/m²|watt_hours_per_square_foot|Wh/ft²|kilowatt_hours_per_square_meter|kWh/m²|kilowatt_hours_per_square_foot|kWh/ft²|megawatt_hours_per_square_meter|MWh/m²|megawatt_hours_per_square_foot|MWh/ft²|megajoules_per_square_meter|MJ/m²|megajoules_per_square_foot|MJ/ft²|kilobtu_per_square_foot|kBTU/ft²|megabtu_per_square_foot|MBTU/ft²|joules_per_gram|J/g|joules_per_kilogram|J/kg|joules_per_kilogram_dry_air|J/kg_dry|btu_per_pound|BTU/lb|btus_per_pound_dry_air|btu/lb_dry|kilojoules_per_kilogram|kJ/kg|kilojoules_per_kilogram_dry_air|kJ/kg_dry|megajoules_per_kilogram_dry_air|MJ/kg_dry|calorie_per_gram|cal/g|joules_per_degree_kelvin|J/°K|kilojoules_per_degree_kelvin|kJ/°K|megajoules_per_degree_kelvin|MJ/°K|newton|N|pound_force|lbf|hertz|Hz|kilohertz|kHz|cycles_per_hour|cph|cycles_per_minute|cpm|megahertz|MHz|per_minute|/min|per_second|/s|per_hour|/h|percent_per_second|%/s|air_changes_per_hour|ACH|kilograms_per_square_meter|kg/m²|grams_per_square_meter|g/m²|degrees_kelvin_per_second|K/s|degrees_celsius_per_hour|°C/h|degrees_celsius_per_minute|°C/min|degrees_fahrenheit_per_hour|°F/h|degrees_fahrenheit_per_minute|°F/min|degrees_kelvin_per_hour|K/h|degrees_kelvin_per_minute|K/min|lux|lx|footcandle|fc|phot|henry|H|watts_per_square_meter_irradiance|W/m²_irr|watts_per_square_foot_irradiance|W/ft²_irr|meter|m|micrometer|µm|millimeter|mm|centimeter|cm|kilometer|km|inch|in|foot|ft|yard|yd|mile|candelas_per_square_meter|cd/m²|candels_per_square_foot|cd/ft²|lumen|lm|candela|cd|amperes_per_meter|A/m|weber|Wb|tesla|T|kilogram|kg|milligram|mg|gram|g|ounce|oz|pound|lb|kilopound|klb|metric_ton|ton|short_ton|t|kilograms_per_second|kg/s|kilograms_per_minute|kg/min|kilograms_per_hour|kg/h|pounds_per_minute|lb/min|pounds_per_hour|lb/h|pounds_per_second|lb/s|kilopounds_per_hour|klb/h|grams_per_second|g/s|grams_per_minute|g/min|metric_tons_per_hour|ton/h|newton_second|Ns|watt|W|milliwatt|mW|kilowatt|kW|megawatt|MW|gigawatt|GW|btus_per_hour|BTU/h|therms_per_hour|therm/h|horsepower|hp|foot_pounds_per_second|ftlbs/sec|tons_refrigeration|tonref|kilobtus_per_hour|kBTU/h|megabtus_per_hour|MBTU/h|MMBTU/h|joules_per_hour|J/h|kilojoules_per_hour|kJ/h|megajoules_per_hour|MJ/h|gigajoules_per_hour|GJ/h|watts_per_square_meter|W/m²|watts_per_square_foot|W/ft²|kilowatts_per_square_meter|kW/m²|kilowatts_per_square_foot|kW/ft²|kilobtus_per_hour_per_square_foot|kBTU/h/ft²|watts_per_cubic_meters_per_second|W/m³/s|watts_per_cubic_feet_per_minute|W/cfm|kilowatts_per_kilocubic_feet_per_minute|kW/kcfm|kilowatts_per_gallons_per_minute|kW/gal/min|volt_ampere|VA|kilovolt_ampere|kVA|megavolt_ampere|mVA|volt_ampere_reactive|VAR|kilovolt_ampere_reactive|kVAR|megavolt_ampere_reactive|MVAR|pascal|Pa|kilopascal|kPa|bar|atmosphere|atm|pounds_per_square_inch|psi|centimeters_of_water|cmH₂O|inches_of_water|in/wc|inH₂O|millimeters_of_mercury|mmHg|centimeters_of_mercury|cmHg|inches_of_mercury|inHg|hectopascal|hPa|millibar|mbar|joules_per_kilogram_degree_kelvin|J/kg°K|newtons_per_meter|N/m|fahrenheit|°F|celsius|°C|kelvin|K|fahrenheit_degrees|Δ°F|celsius_degrees|Δ°C|kelvin_degrees|ΔK|watts_per_meter_degree_kelvin|W/m°K|nanosecond|ns|microsecond|µs|millisecond|ms|hundredths_second|cs|tenths_second|ds|second|sec|s|minute|min|hour|hr|h|day|week|wk|julian_month|mo|year|yr|meters_per_second|m/s|kilometers_per_second|km/s|kilometers_per_hour|km/h|miles_per_hour|mph|feet_per_second|ft/s|feet_per_minute|ft/min|millimeters_per_second|mm/s|millimeters_per_minute|mm/min|meters_per_minute|m/min|meters_per_hour|m/h|knot|cubic_meter|m³|cubic_millimeter|mm³|cubic_centimeter|cm³|milliliter|mL|hectoliter|hL|liter|L|kiloliter|kL|cubic_inch|in³|cubic_foot|ft³|cubic_yard|yd³|gallon|gal|kilogallon|kgal|quart|qt|pint|pt|fluid_ounce|fl_oz|imperial_gallon|galUK|hecto_cubic_foot|hft³|cubic_meters_per_second|m³/s|milliliters_per_second|mL/s|hectoliters_per_second|hL/s|liters_per_second|L/s|cubic_feet_per_second|cfs|cubic_feet_per_minute|cfm|cubic_feet_per_hour|cfh|kilocubic_feet_per_minute|kcfm|imperial_gallons_per_minute|galUK/min|liters_per_minute|L/min|gallons_per_minute|gal/min|gallons_per_hour|gal/hr|gph|liters_per_hour|L/h|cubic_meters_per_minute|m³/min|cubic_meters_per_hour|m³/h|byte|kilobyte|kB|megabyte|MB|gigabyte|GB|terabyte|TB|petabyte|PB)" => <>.to_owned(),}